name: Create Tag on Merge to Main

on:
  push:
    branches:
      - main

permissions:
  contents: write # Grant write permissions to the GITHUB_TOKEN at the workflow level

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Get current package version
        id: get_current_version
        run: echo "CURRENT_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Bump version and commit
        id: bump_version
        run: |
          npm version patch --no-git-tag-version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add package.json
          git commit -m "Bump version to $(node -p "require('./package.json').version")"
          git push origin main

      - name: Get new package version
        id: get_new_version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check if tag already exists
        id: check_tag
        run: |
          TAG_EXISTS=$(git tag -l "v${{ env.PACKAGE_VERSION }}")
          if [ -z "$TAG_EXISTS" ]; then
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Create tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag "v${{ env.PACKAGE_VERSION }}"
          git push origin "v${{ env.PACKAGE_VERSION }}"

      - name: Create GitHub Release
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          name: Release v${{ env.PACKAGE_VERSION }}
          body: Automated release based on package.json version.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
